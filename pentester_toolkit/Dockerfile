# Author: Emma Heffernan
# Description: Dockerfile for emmaheff/pentester_toolkit
# Run cmd: docker run -it --rm emmaheff/pentester_toolkit

# Pulling in metasploit framework docker image
FROM metasploitframework/metasploit-framework AS msf
# Using the same version of alpine and ruby as metasploit
FROM ruby:2.7.2-alpine3.12 AS msfbuilder
# Commands taken from: https://github.com/rapid7/metasploit-framework/blob/master/Dockerfile
# On how to copy and install metasploit in a docker container

# This section defines some environment variables which are required to build and install metasploit
# To avoid conflicts environment variables and arguments should always be declared at the start of a section
ENV NMAP_PRIVILEGED=""
ENV APP_HOME=/usr/src/metasploit-framework
ENV METASPLOIT_GROUP=metasploit
ARG BUNDLER_CONFIG_ARGS="set clean 'true' set no-cache 'true' set system 'true' set without 'development test coverage'"
ENV BUNDLE_IGNORE_MESSAGES="true"
# Setting the current directory to $APP_HOME, this is the location of the metasploit source code
WORKDIR $APP_HOME
# Installing some custom packages, including bash, nmap, curl which want to support
# Also installing some missing packages for metasploit build such as libffi-dev and ruby-bigdecimal which without the build fails or metasploit crashes at startup inside the container
RUN apk update && apk add python3 bash nmap curl openssh \
    su-exec ruby ruby-dev libffi-dev ruby-bigdecimal
# Copying the bundle and metasploit source code from the metasploit docker image from the start which was pulled in AS meta
COPY --from=msf /usr/local/bundle /usr/local/bundle
COPY --from=msf ${APP_HOME} ${APP_HOME}

# These commands were taken mostly from the metasploit github Dockerfile
RUN apk add --no-cache \
      autoconf \
      bison \
      build-base \
      ruby-dev \
      openssl-dev \
      readline-dev \
      sqlite-dev \
      postgresql-dev \
      libpcap-dev \
      libxml2-dev \
      libxslt-dev \
      yaml-dev \
      zlib-dev \
      ncurses-dev \
      git \
    && echo "gem: --no-document" > /etc/gemrc \
    && gem update --system \
    && bundle config $BUNDLER_ARGS \
    && bundle install --jobs=8 \
    && rm -rf /usr/local/bundle/cache \
    && chmod -R a+r /usr/local/bundle

FROM ruby:2.7.2-alpine3.12
# Copying environment into new layer
ENV NMAP_PRIVILEGED=""
ENV APP_HOME=/usr/src/metasploit-framework
ENV METASPLOIT_GROUP=metasploit
ARG BUNDLER_CONFIG_ARGS="set clean 'true' set no-cache 'true' set system 'true' set without 'development test coverage'"
ENV BUNDLE_IGNORE_MESSAGES="true"
RUN addgroup -S $METASPLOIT_GROUP
WORKDIR $APP_HOME
RUN apk update && apk add python3 bash nmap curl openssh wget ca-certificates\
    su-exec ruby ruby-dev libffi-dev ruby-bigdecimal \
    bash sqlite-libs nmap nmap-scripts nmap-nselibs postgresql-libs python2 python3 ncurses libcap su-exec alpine-sdk python2-dev openssl-dev nasm mysql wireshark nikto john openjdk11 openssl ca-certificates ttf-dejavu sudo man-db
# Copying from the msfbuilder into current container layers
COPY --from=msfbuilder /usr/local/bundle /usr/local/bundle
COPY --from=msfbuilder ${APP_HOME} ${APP_HOME}

RUN /usr/sbin/setcap cap_net_raw,cap_net_bind_service=+eip $(which ruby)
RUN /usr/sbin/setcap cap_net_raw,cap_net_bind_service=+eip $(which nmap)
RUN chown -R root:metasploit /usr/local/bundle
RUN chown -R root:metasploit $APP_HOME/
RUN chmod 664 $APP_HOME/Gemfile.lock
RUN gem update --system
RUN cp -f $APP_HOME/docker/database.yml $APP_HOME/config/database.yml
RUN curl -L -O https://github.com/pypa/get-pip/raw/3843bff3a0a61da5b63ea0b7d34794c5c51a2f11/get-pip.py && python get-pip.py && rm get-pip.py
RUN pip install impacket
# Setting the root directory back to root "/" for future use
WORKDIR /
# Cloning examples scripts for Impacket
RUN mkdir /impacket && git clone https://github.com/3mm4h3ff/impacket
# Installing crunch to create wordlist
RUN mkdir crunch && wget https://kumisystems.dl.sourceforge.net/project/crunch-wordlist/crunch-wordlist/crunch-3.6.tgz && tar zxvf crunch-3.6.tgz -C crunch && make install -C crunch/crunch-3.6 
# Downloading rockyou.txt wordlist for John the Ripper
RUN mkdir /usr/share/john/wordlists && wget https://gitlab.com/kalilinux/packages/wordlists/-/raw/kali/master/rockyou.txt.gz && gunzip rockyou.txt.gz && mv rockyou.txt /usr/share/john/wordlists/
# Installing NGROK
RUN wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-386.zip -P /tmp && unzip /tmp/ngrok-stable-linux-386.zip -d /usr/bin
# Installing the WebDav
RUN pip install wsgidav cheroot
# Installing BurpSuite Community
RUN mkdir /burpsuite && wget -O /burpsuite/burp.jar 'https://portswigger.net/burp/releases/download?product=community&version=2021.4.3&type=Jar'
COPY config.xml /burpsuite
# Copying the scripts into the container
COPY scripts/* /home/scripts/
# Adding custom .bashrc file to add executable locations to bash PATH
COPY docker_bashrc /root/.bashrc
# Exposing Ports
EXPOSE 80 
EXPOSE 4646
# Defining the entry point of the container as the python menu script
ENTRYPOINT ["python3", "/home/scripts/entrypoint.py"]
