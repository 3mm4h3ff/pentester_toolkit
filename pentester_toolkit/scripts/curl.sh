#!/bin/bash
# Author: Emma Heffernan
# Description: Allows user to view header information, download or upload files using cURL

# Initialising the toolexit variable to equal 0
TOOL_EXIT=0
# Running until the user wants to exit the tool
while [ $TOOL_EXIT == 0 ]; do 

    # Initialising the variables
    CURL_OPT=""
    CURL_URL=""
    CURL_FILE=""

    # Creating titles and options list for user input
    echo ""
    echo "cURL Helper"
    echo ""
    echo "Please select 1 of the following options: "
    echo ""
    echo " 1. View Header Information"
    echo " 2. View Webpage"
    echo " 3. View Webpage and Save to a File"
    echo " 4. Download Files using cURL"
    echo " 5. Upload File using cURL"
    echo " 6. Enter Bash Commandline"
    echo " 0. Exit cURL Helper"

    # Intaking the user input for above options
    read -e -p "Please enter an option: " USER_INPUT
    # Rely to the user what they entered
    echo "You entered: $USER_INPUT" 
    
    # Matching the options in the menu above, the user can input their option choice, first here being to exit the problem
    if [[ $USER_INPUT == 0 ]]; then
        TOOL_EXIT=1
    # If option 1 is selected the user will enter their URL which they want to receive header information
    elif [[ $USER_INPUT == 1 ]]; then
        read -e -p "Enter URL: " CURL_URL
        CURL_OPT=""
    # Option 2 will take the user input and run curl option command of -i to view more information on the webpage
    elif [[ $USER_INPUT == 2 ]]; then
        read -e -p "Enter URL: " CURL_URL
        CURL_OPT="-i" 
    # Selecting option 3 will prompted the user to enter their URL and filename which they want saved along with the confirmation of filename and option of -o to output the information
    elif [[ $USER_INPUT == 3 ]]; then
        read -e -p "Enter URL: " CURL_URL
        read -e -p "Enter the Filename for when saved: " CURL_FILE
        echo "Filename pending save: " $CURL_FILE
        CURL_OPT="-o"
    # Entering option 4 asks user to type in their URL which they wish to download a file etc 
    elif [[ $USER_INPUT == 4 ]]; then
        read -e -p "Enter File Download URL: " CURL_URL
        echo ""
        CURL_OPT="-O"
    # Second last options gives user option to upload a file to a remote server, example free online server to use: temp.sh
    elif [[ $USER_INPUT == 5 ]]; then
        read -e -p "Enter Upload URL: " CURL_URL
        read -e -p "Enter the Filename to upload: " CURL_FILE
        echo "Filename pending upload: " $CURL_FILE
        CURL_OPT="-T"
    # Lastly the user can enter a bash terminal to enter their own curl commands if they wish
    elif [[ $USER_INPUT == 6 ]]; then
         /home/scripts/bash.sh 
    else
        # If users fails to enter a correct number option they'll be prompted with the following error message
        echo "Incorrect option, please try again!"
    fi
    # if user enters 0 if will exit however if the value is greater it will run the curl command with all variables attached
    if [[ $TOOL_EXIT == 0 ]]; then
        curl $CURL_URL $CURL_OPT $CURL_FILE
    fi
# End of the do while loop
done
