#!/bin/bash
# Author: Emma Heffernan
# Description: Password Cracking using John the Ripper adn Wordlists

# Initialising the toolexit variable to equal 0
TOOL_EXIT=0
# Running until the user wants to exit the tool
while [ $TOOL_EXIT == 0 ]; do 

    # Initialising the variables
    JOHN_OUTPUT=""
    FILE_PATH=""
    RUN_BASH=""
    
    # Creating titles and options list for user input
    echo ""
    echo "Password Cracking"
    echo ""
    echo "Please select 1 of the following options: "
    echo ""
    echo " 1. Basic Password Crack"
    echo " 2. Generate Personal Wordlist using Crunch"
    echo " 3. File Path to all installed Wordlists"
    echo " 4. Enter Bash Terminal"
    echo " 0. Exit Passing Cracking"

    # Intaking the user input for above options
    read -e -p "Please enter an option: " USER_INPUT
    # Rely to the user what they entered
    echo "You entered: $USER_INPUT" 
    
    # Matching the options in the menu above, the user can input their option choice, first here being to exit the problem
    if [[ $USER_INPUT == 0 ]]; then
        TOOL_EXIT=1
    # Option 1 in the menu is for the user to enter a filename or path in which they want to password crack with john
    elif [[ $USER_INPUT == 1 ]]; then
        read -e -p "Please enter the file name or path for password cracking: " FILE_PATH
        JOHN_OUTPUT="john"
    # User can decided to generate their own wordlist using command line tool crunch
    elif [[ $USER_INPUT == 2 ]]; then
        read -e -p "Generate Personal Wordlist using Crunch, hit enter to continue"
        JOHN_OUTPUT="crunch --help"
        RUN_BASH="/home/scripts/bash.sh"
    # In option 3 the user can view all the wordlists on the docker container
    elif [[ $USER_INPUT == 3 ]]; then
        read -e -p "File Path to all installed wordlists, hit enter to continue and 'ls' to search wordlists"
        JOHN_OUTPUT=" cd /usr/share/john/wordlists"
        RUN_BASH="/home/scripts/bash.sh"
    # Lastly the user can enter a bash terminal to enter their own curl commands if they wish
    elif [[ $USER_INPUT == 4 ]]; then
        read -e -p "Enter Bash Terminal, hit enter to continue"
        RUN_BASH="/home/scripts/bash.sh"
    else
        # If users fails to enter a correct number option they'll be prompted with the following error message
        echo "Incorrect option, please try again!"
    fi
    # if user enters 0 if will exit however if the value is greater it will run the curl command with all variables attached
    if [[ TOOL_EXIT != 0 ]]; then
    $JOHN_OUTPUT $FILE_PATH
    $RUN_BASH
    fi
# End of the do while loop
done
