#!/bin/bash
# Author: Emma Heffernan
# Description: Allows to scan an entire network and outputs the results

# Initialising the variables
IP_INPUT=""
FILE_NAME=""

# Initialising the toolexit variable to equal 0 and initialising the variables and their values
TOOL_EXIT=0
TEXT_AGAIN="continue"
# Outputs the files with the time and date stamps
TIME_DATE=`date +%y%m%d_%H%M`
# Warning message for the scan which will take a long time
echo "WARNING: Entire Network Scan can take a long time."
# Running until the user wants to exit the tool
while [ $TOOL_EXIT == 0 ]; do 
    # The user will be asked if they want to continue with the scan
    read -e -p "Do you want to ${TEXT_AGAIN}? (y/n): " NET_SCAN
    TEXT_AGAIN="scan again"
    # when user selects yes, they'll be asked to enter their target IP with the subnet mask, along with the filename for the results
    if [[ $NET_SCAN == "y" ]]; then
        read -e -p "Enter your IP with Subnet Mask (i.e. /24, /30 etc.): " IP_INPUT
        read -e -p "Please enter a filename for results (Default: scan_result_$TIME_DATE) (NOTE: Do Not Add File Extension):" FILE_NAME
        FILE_NAME=${FILE_NAME:-"scan_result_${TIME_DATE}"}
        nmap $IP_INPUT -oA $FILE_NAME
        echo "Result files written to:"
        echo "`ls ${FILE_NAME}*`"
    else 
        TOOL_EXIT=1
    fi
# End of the do while loop
done