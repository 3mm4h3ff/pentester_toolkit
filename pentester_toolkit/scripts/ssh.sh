#!/bin/bash
# Author: Emma Heffernan
# Description: Enables basic reverse ssh

REMOTE_PORT=""
USERNAME=""
REMOTE_SERVER=""
LOCALHOST=""
USER_INPUT="n"
# Need to ensure the sshd is running so asks the user to check the output and confirm it's running, if not the rc-service command will run again until the service is running.
# (Note: It usually works on the 2nd attempt)
while [ $USER_INPUT != "y" ]; do
    echo "Starting sshd"
    rc-update add sshd
    rc-service sshd start
    echo "Service status"
    rc-status
    read -e -p "Is sshd started? (y/n): " USER_INPUT
done

echo "Setting up ssh user"
# Creating the user specified
read -e -p "Please enter desired username (Default: user): " USERNAME
USERNAME=${USERNAME:-user}
adduser ${USERNAME}
# Setting remote server IP
read -e -p "Please enter IP for remote server (Format: <username>:<IP>): " REMOTE_SERVER
# Setting default port to 43022 or using user specified port
read -e -p "Remote port in which to connect to reverse ssh tunnel (Default: 43022): " REMOTE_PORT
REMOTE_PORT=${REMOTE_PORT:-43022}
# Setting localhost name
read -e -p "Enter localhost IP (Default: localhost): " LOCALHOST
LOCALHOST=${LOCALHOST:-localhost}

# Informing user on command they will need to enter on remote machine
echo "To connect run the following from the remote server"
echo "ssh ${USERNAME}@${LOCALHOST} -p ${REMOTE_PORT}"
echo "Type 'exit' on both terminal windows to cancel reverse ssh session"

# Starting the reverse ssh connection, this will ask for the password of the remote server if rsa tokens have not been set up previously
CMD="ssh -R ${REMOTE_PORT}:${LOCALHOST}:22 ${REMOTE_SERVER}"
echo "$CMD"
$CMD